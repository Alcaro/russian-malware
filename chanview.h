#pragma once
#include "arlib.h"

//don't know if this is guaranteed stable, but I'd rather not include the gtk header here
typedef struct _GtkTreeStore GtkTreeStore;
typedef struct _GtkTreeView GtkTreeView;
typedef struct _GtkTreeRowReference GtkTreeRowReference;
typedef struct _GtkTreeSelection GtkTreeSelection;
typedef struct _GtkWidget GtkWidget;

class chanview : nocopy {
	GtkTreeStore* store;
	GtkTreeView* view;
	
	function<void(void* userdata)> focus_cb;
	
	chanview();
	
	class chanbase : nocopy {
		friend class chanview;
	protected:
		chanview* parent;
		GtkTreeRowReference* row;
		
		chanbase(chanview* parent, GtkTreeRowReference* parentrow, cstring name, void* userdata);
		
	public:
		void color(uint32_t xrgb); // color remains until changed (clearing in onfocus would generally be a good idea)
		void focus(); // will fire the onfocus callback
		
	protected:
		~chanbase();
	};
	
public:
	class channel : public chanbase {
		friend class chanview;
		channel(chanview* parent, GtkTreeRowReference* parentrow, cstring name, void* userdata)
			: chanbase(parent, parentrow, name, userdata)
		{}
		
	public:
		~channel() {}
	};
	
	//'Guild' is a stupid name for IRC, but calling it Server on Discord is even dumber, and they need the same name.
	//IRC has an irritating mix between Server/Network, anyways, so neither of those names is fully appropriate.
	class guild : public chanbase {
		friend class chanview;
		guild(chanview* parent, GtkTreeRowReference* parentrow, cstring name, void* userdata)
			: chanbase(parent, parentrow, name, userdata)
		{}
		
	public:
		channel* child(cstring name, void* userdata) { return new channel(parent, row, name, userdata); }
		~guild() {}
	};
	
	static chanview* create() { return new chanview(); }
	// it's safe to not use GTK_WIDGET(foo), defining G_DISABLE_CAST_CHECKS replaces it with a straight cast
	GtkWidget* gtkwidget() { return (GtkWidget*)view; }
	
private:
	static void onfocus_sig_nat(GtkTreeSelection* sel, void* userdata)
	{
		chanview* this_ = (chanview*)userdata;
		this_->onfocus_sig(sel);
	}
	void onfocus_sig(GtkTreeSelection* sel);
public:
	//There's only one onfocus function per channel view object, but the userdata can vary per guild/channel.
	void onfocus(function<void(void* userdata)> callback)
	{
		focus_cb = callback;
	}
	
	//If userdata is NULL, the guild root can't be focused. Use if there is no obvious equivalent of IRC's server tab.
	guild* child(cstring name, void* userdata);
	~chanview();
};
