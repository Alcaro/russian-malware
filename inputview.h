#pragma once
#include "arlib.h"

typedef struct _GtkScrolledWindow GtkScrolledWindow;
typedef struct _GtkTextView GtkTextView;
typedef struct _GtkWidget GtkWidget;
typedef struct _GdkEventKey GdkEventKey;

class inputview : nocopy {
	GtkScrolledWindow* scrollview; // unused if !GTK_CHECK_VERSION(3,22,0), but this header doesn't include gtk.h so can't remove
	GtkTextView* view;
	
	function<void(cstring text)> onactivate;
	function<void(int x)> onmovecaret;
	
	int scrollbackpos = -1; // -1 for not in scrollback, 0 for looking at most recent message (index 0)
	array<string> scrollback;
	
	void call_onmovecaret();
	
public:
	static inputview* create();
	inputview();
	bool onkeydown(GtkWidget* widget, GdkEventKey* event);
	
	void set_onactivate(function<void(cstring text)> onactivate)
	{
		this->onactivate = onactivate;
	}
	void set_onmovecaret(function<void(int x)> onmovecaret)
	{
		this->onmovecaret = onmovecaret;
	}
	void grab_focus();
	
	struct state {
		friend class inputview;
	private:
		string text;
		size_t textpos = 0;
		array<string> scrollback;
	};
	
	void store_get(state* st);
	void store_set(const state* st);
	
	GtkWidget* gtkwidget();
};
