#pragma once
#include "arlib.h"

typedef struct _GtkScrolledWindow GtkScrolledWindow;
typedef struct _GtkTextView GtkTextView;
typedef struct _GtkWidget GtkWidget;
typedef struct _GdkEventKey GdkEventKey;

class inputview : nocopy {
	GtkScrolledWindow* scrollview; // unused if !GTK_CHECK_VERSION(3,22,0), but this header doesn't include gtk.h so can't remove
	GtkTextView* view;
	
	function<void(cstring text)> onactivate;
	function<void(GdkEventKey* event)> onscroll;
	function<void(int dir)> onswitchfocus;
	
public:
	static inputview* create();
	inputview();
	static bool onkeydown_nat(GtkWidget* widget, GdkEventKey* event, void* user_data);
	
	void set_onactivate(function<void(cstring text)> onactivate)
	{
		this->onactivate = onactivate;
	}
	void set_onscroll(function<void(GdkEventKey* event)> onscroll)
	{
		this->onscroll = onscroll;
	}
	void set_onswitchfocus(function<void(int dir)> onswitchfocus)
	{
		this->onswitchfocus = onswitchfocus;
	}
	void grab_focus();
	
	struct state {
		friend class inputview;
	private:
		string text;
		size_t textpos = 0;
	};
	
	void store_get(state* st);
	void store_set(const state* st);
	
	GtkWidget* gtkwidget();
};
